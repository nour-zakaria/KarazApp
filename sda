 // saveData =async()=>{
  //       const {email,password} = this.state;
 
  //       //save data with asyncstorage
  //       let loginDetails={
  //           email: email,
  //           password: password
  //       }
 
  //       if(this.props.type !== 'Login')
  //       {
  //           AsyncStorage.setItem('loginDetails', JSON.stringify(loginDetails));
 
  //           Keyboard.dismiss();
  //           alert("You successfully registered. Email: " + email + ' password: ' + password);
  //           this.login();
  //       }
  //       else if(this.props.type == 'Login')
  //       {
  //           try{
  //               let loginDetails = await AsyncStorage.getItem('loginDetails');
  //               let ld = JSON.parse(loginDetails);
 
  //               if (ld.email != null && ld.password != null)
  //               {
  //                   if (ld.email == email && ld.password == password)
  //                   {
  //                       alert('Go in!');
  //                   }
  //                   else
  //                   {
  //                       alert('Email and Password does not exist!');
  //                   }
  //               }
 
  //           }catch(error)
  //           {
  //               alert(error);
  //           }
  //       }
  //   }
  //    showData = async()=>{
  //       let loginDetails = await AsyncStorage.getItem('loginDetails');
  //       let ld = JSON.parse(loginDetails);
  //       alert('email: '+ ld.email + ' ' + 'password: ' + ld.password);
  //   }
//    validateForm = () => {
//         let isValid = true;
//         let {email, password} = this.state;
//         let errors = {};

//         if (!email) {
//             isValid = false;
//             errors["email"] = 'لم تدخل بريدك الإلكتروني بعد'
//         }

//         if (!password) {
//             isValid = false;
//             errors["password"] = "لم تدخل كلمة مرور بعد";
//         }

//         this.setState({errors: errors});
//         return isValid;
//     };
async storeToken(user) {
    try {
       await AsyncStorage.setItem("userData", JSON.stringify(user));
    } catch (error) {
      console.log("Something went wrong", error);
    }
  }
  async getToken(user) {
    try {
      let userData = await AsyncStorage.getItem("userData");
      let data = JSON.parse(userData);
      console.log(data);
    } catch (error) {
      console.log("Something went wrong", error);
    }
  }
  validateForm = () => {
        let isValid = true;
        let {name, phone, password , accept ,alertMsg} = this.state;
        let errors = {};

        if(!name) {
            isValid = false;
            errors["name"] = 'الرجاء إدخال اسم المستخدم'
        }else if (name.length < 3) {
            isValid = false;
            errors["name"] = 'الاسم الذي أدخلته قصير جداً'

        }else {
            if(!name.match(/^[a-zA-Z\u0600-\u06FF\s]+$/)){
                isValid = false;
                errors["name"] = "الاسم يتكون من أحرف عربية أو انجليزية فقط"
            }
        }

         if(!phone) {
            isValid= false;
            errors["phone"] = "ds"
        }else{
         if (!phone.match( /^[0]?[789]\d{9}$/)){
            // if (!phone.match(/^0|08[0-9]{9,}$/)){
                isValid = false;
                errors["phone"] = 'البريد الالكتروني الذي أدخلته غير صحيح'
            }
        }

        // if(!email) {
        //     isValid= false;
        //     errors["phone"] = 'الرجاء إدخال بريدك الإلكتروني'
        // }else {
        //     if (!email.match(/[^\d][\w.]+@\w+(\.[A-Za-z]+){1,2}/g)){
        //         isValid = false;
        //         errors["email"] = 'البريد الالكتروني الذي أدخلته غير صحيح'
        //     }
        // }

        if (!password) {
            isValid = false;
            errors["password"] = "الرجاء إدخال كلمة مرور";
        }else {
            if(!password.match(/^(?=.*\d)(?=.*[a-z]).{8,}$/)){
                isValid = false;
                errors["password"] =  ".كلمة المرور التي اخترتها ضعيفة, يجب ان تحتوي أحرف وأرقام ";
            }
        }

        // if (!accept) {
        //     isValid = false;
        //     alertMsg =  " لم توافق على شروط الخدةم"
        //     this.setState({alertMsg});
        //     errors["accept"] = "لم توافق على شروط الخدمة"
        // }

        this.setState({errors: errors});
        return isValid;
    };